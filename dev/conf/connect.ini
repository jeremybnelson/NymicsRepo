# connect.ini

; Central catalog of all cloud and database connections.
;
; Namespace: <service>_<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
;
; <service> = cloud, database
; <entity> = udp, amc, <resort> ...
; <location> = aws, azure, sungard ...
; <system> =  capture, archive, capture ... future: validate, normalize, unify, master, mart
; <instance> = 01 ...
; <subject> = etl | sales, ...
; <sdlc> = dev, uat, prod, sandbox[-*], project specific (erp)
;
;
; Examples:
;
; # <database>:<namespace> + <sdlc>
; database:amc_heroku_amp_01_sales_<sdlc>
; database:amc_sungard_rtp_01_sales_<sdlc>
; database:amc_sungard_dlakeref_01_sales_<sdlc>
;
; # cloud:<namespace> (no SDLC required; pull names from IaC bootstrap.ini)
; cloud:amc_aws_capture_01_etl
; cloud:udp_aws_archive_01_etl
; cloud:udp_aws_stage_01_etl
;
; # datalake database (no SDLC required; pull names from IaC bootstrap.ini)
; database:udp_aws_stage_01_datalake
;
;
; Changes:
; - cloud.cloud > cloud.platform
; - database.engine > database.platform
; - platform = sqlserver > platform = mssql
; - publickey > public_key
; - privatekey > private_key
; - drop use of <sdlc>; explicitly reference IaC generated names by full key name vs concatentated values
;
;
; Future:
;
; Every cloud resource should have its own optional account; defaulting to the primary cloud account.
; Use case: using resources across SDLC environments
; capture_queue_account = default to primary cloud=<account> if empty
;


; ---------------------------------------------------------
; CLOUD ACCOUNTS



; as an IAM service account or as a role applied to EC2 ETL instances
; cloud_<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
; [cloud:udp_aws_<system>_<instance>_<subject>_<sdlc>]
; [cloud:udp_azure_<system>_<instance>_<subject>_<sdlc>]
; [cloud:udp_<sungard|den>_<system>_<instance>_<subject>_<sdlc>]
; region =
; role = <optional>
; username = <optional>
; public_key =
; private_key =


; ---------------------------------------------------------
; CLOUD CONNECTIONS

; default cloud properties
[cloud]

# account details
platform = aws
account_id = {%bootstrap.iam.aws_account.id%}
account_alias = {%bootstrap.iam.aws_account.alias%}
region = {%bootstrap.build.region.name%}


# resources
admin_objectstore = {%bootstrap.S3.admin_bucket.name%}
archive_objectstore = {%bootstrap.s3.archive_bucket.name%}
capture_objectstore = {%bootstrap.s3.capture_amc_bucket.name%}
capture_queue = {%bootstrap.sqs.capture_queue.name%}


; capture
[cloud:amc_aws_capture_01_etl]
public_key = {%bootstrap.iam.user_service_capture_amc.access_key%}
private_key = {%bootstrap.iam.user_service_capture_amc.secret_key%}


; Future: Archive and stage should transition to use of role vs user based usage patterns.
[cloud:udp_aws_archive_01_etl]
public_key = {%bootstrap.iam.user_mgreene.access_key%}
private_key = {%bootstrap.iam.user_mgreene.secret_key%}


; stage should clone archive settings
[cloud:udp_aws_stage_01_etl]
@clone cloud:udp_aws_archive_01_etl


; ---------------------------------------------------------
; DATABASE CONNECTIONS

; <class>_<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
; <class> = database
; <entity> = udp, amc, <resort> ...
; <location> = aws, azure, heroku, sungard (den), ...
; <system> = amp, dlakeref, rtp, ...
; <instance> = 01 ...
; <subject> = sales (different subjects may have different permissions)
; <sdlc> = dev, qa/uat, prod, sandbox[-*] (leave blank for cloud datalake database)


; <class>_<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
; [database:udp_aws_<system>_<instance>_<subject>_<sdlc>]
; [database:amc_<location>_<system>_<instance>_<subject>_<sdlc>]
; platform = mssql | postgresql
; driver = <mssql only>
; host =
; port =
; database = <optional>
; schema = <optional>
; username =
; password =


# cloud database (data target)

# DATABASE:UDP_AWS_STAGE_01_DATALAKE (used by both archive and stage jobs)

; database:<entity>_<location>_<system>_<instance>_<subject|role>
; NOTE: No SDLC suffix; SDLC context retrieved from bootstrap.ini.

[database:udp_aws_stage_01_datalake]
; NOTE: host must use private fdqn when running in private subnet on app server
platform = mssql
driver = ODBC Driver 17 for SQL Server
host = {%bootstrap.route53.mssql_private.fqdn%}
port = {%bootstrap.rds.mssql.port%}
database =
schema =
username = {%bootstrap.rds.mssql.master_username%}
password = {%bootstrap.rds.mssql.master_password%}


# data source databases ...


# DATABASE:AMC_HEROKU_AMP_01_SALES_<SDLC>

; There is also a pre-dev instance of AMP data based on a Informatica cloned version of AMP
; NOTE: The Sungard version of AMP requires table_prefix = IKON_.


; database:<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
[database:amc_heroku_amp_01_sales_dev]
platform = postgresql
host = ec2-34-230-153-80.compute-1.amazonaws.com
port = 5432
database = dcdc9r2tplv9f
schema = public
username = alterra-data-lake-uat
password = p933dbd025533bd4a7bfb4cb53a7bf16bac7112926df2d853e91a21beb951efc2


; database:<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
[database:amc_heroku_amp_01_sales_uat]
@clone database:amc_heroku_amp_01_sales_dev


; database:<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
[database:amc_heroku_amp_01_sales_prod]
platform = postgresql
host = ec2-34-237-251-222.compute-1.amazonaws.com
port = 5432
database = db6oacl4dfhph7
schema = public
username = alterra-data-lake
password = p987e2b5f61d113247839010c38d6dea1287605205f47f7979a3057459bc4ea23


# DATABASE:AMC_SUNGARD_RTP_01_SALES_<SDLC>


; database:<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
[database:amc_sungard_rtp_01_sales_dev]
platform = mssql
driver = ODBC Driver 17 for SQL Server
host = vm-ded-sqlc1n1.ilab.tst\dev
port = 49733
database = rtpikon
schema = dbo


; database:<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
[database:amc_sungard_rtp_01_sales_uat]
@clone database:amc_sungard_rtp_01_sales_dev


; database:<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
[database:amc_sungard_rtp_01_sales_prod]
platform = mssql
driver = ODBC Driver 17 for SQL Server
host = vn-den-ikonl.idirectory.itw
port = 49733
database = rtpone
schema = dbo


# DATABASE:AMC_SUNGARD_DLAKEREF_01_SALES_<SDLC>


; database:<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
[database:amc_sungard_dlakeref_01_sales_dev]
platform = mssql
driver = ODBC Driver 17 for SQL Server
host = vn-den-ikonl.idirectory.itw
port = 49733
database = dlakeref
schema = dbo


; database:<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
[database:amc_sungard_dlakeref_01_sales_uat]
@clone database:amc_sungard_dlakeref_01_sales_dev


; database:<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
[database:amc_sungard_dlakeref_01_sales_prod]
@clone database:amc_sungard_dlakeref_01_sales_dev


# Future: COMMONSTAGE based data sources


; database:<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
[database:amc_sungard_commonstage_01_commonstage_dev]
platform = mssql
driver = ODBC Driver 17 for SQL Server
host = vm-den-sql4.idirectory.itw\prod
port = 49733
database = common_stage
schema = dbo

; database:<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
[database:amc_sungard_skiervisit_01_visits_dev]
@clone database:amc_sungard_commonstage_01_commonstage_dev

; database:<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
[database:amc_sungard_inntopia_01_lodging_dev]
@clone database:amc_sungard_commonstage_01_commonstage_dev


# Future: ERP IRIS/KART sources (DWSTORE/DW_STORE)


[database:amc_sungard_dwstore_01_erp_dev]
platform = mssql
driver = ODBC Driver 17 for SQL Server
host = vm-den-sql4.idirectory.itw\edw
port = 49733
database = dw_store
schema = dbo

[database:amc_sungard_dwstore_01_erp_uat]
@clone database:amc_sungard_dwstore_01_erp_dev

[database:amc_sungard_dwstore_01_erp_prod]
@clone database:amc_sungard_dwstore_01_erp_dev


# SVR from SVRDB (source)
# Note: This is not SVR from Common Stage - it is SVR from SVRDB.

[database:amc_sungard_svr_01_visits_dev]
platform = mssql
driver = ODBC Driver 17 for SQL Server
host = vm-den-sql3.idirectory.itw\prod
port = 49733
database = svrdb
schema = dbo

[database:amc_sungard_svr_01_visits_uat]
@clone database:amc_sungard_svr_01_visits_dev

[database:amc_sungard_svr_01_visits_prod]
@clone database:amc_sungard_svr_01_visits_dev


# Future: Financial Data Mart (FDM) data sources


; FDM contains no tables; just views
; Need access to FDM: The server principal "IDIRECTORY\malcolm.greene" is not able to access the database "FDM" under the current security context.
; database:<entity>_<location>_<system>_<instance>_<subject>_<sdlc>
[database:amc_sungard_fdm_01_finance_dev]
platform = mssql
driver = ODBC Driver 17 for SQL Server
host = vm-den-sql4.idirectory.itw\prod
port = 49733
database = fdm
schema = dbo

